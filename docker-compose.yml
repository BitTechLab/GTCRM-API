# Docker compose for development

services:
  gtcrm-php:
    build:
      context: .
      dockerfile: php.Dockerfile
    container_name: gtcrm-php
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.env:/var/www/.env
      - /var/www/vendor
    environment:
      - APP_ENV=development
    networks:
      - gtmux-network
    depends_on:
      - gtcrm-postgres
      # - gtcrm-elasticsearch

  gtcrm-nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: gtcrm-nginx
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./nginx-docker-entrypoint.sh:/docker-entrypoint.sh:ro
    depends_on:
      - gtcrm-php
    networks:
      - gtmux-network     
    # entrypoint: ["/bin/sh", "/docker-entrypoint.sh"]   

  # gtcrm-node:
  #   platform: linux/arm64/v8 #this line is optional if you are using Mac Silicon chip (M1/M2/M3)
  #   build:
  #     context: .
  #     dockerfile: ./docker/node.Dockerfile
  #   # image: my-laravel-node
  #   container_name: gtcrm-node
  #   ports:
  #   - "3000:3000"
  #   - "5174:5173"
  #   restart: unless-stopped
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www
  #     - /var/www/node_modules
  #   networks:
  #     - gtmux-network

  gtcrm-postgres:
    image: postgres:14-alpine
    container_name: gtcrm-postgres
    ports:
      - 5433:5432
    # volumes:
    #   - gtcrmpostgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE}
    networks:
      - gtmux-network

  # gtcrm-elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
  #   container_name: gtcrm-elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   volumes:
  #     - gtcrmelasticsearch:/usr/share/elasticsearch/data

networks:
  gtmux-network:
    driver: bridge

volumes:
  gtcrmpostgres:
    driver: local
  # gtcrmelasticsearch:
  #   driver: local